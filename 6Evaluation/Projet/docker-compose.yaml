networks:
  mongo-network:
    driver: bridge
    external: true

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongo-product-tracker
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
      - ./init-mongo:/docker-entrypoint-initdb.d
      - ./mongodb-keyfile:/mongodb-keyfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/mongodb-keyfile"]
    networks:
      - mongo-network
    restart: always

  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - mongo-network
    restart: always

  # Monstache service
  monstache:
    image: rwynn/monstache:latest
    container_name: monstache
    environment:
      - MONGODB_URL=mongodb://root:rootpassword@mongo-product-tracker:27017
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./config/monstache.toml:/config/monstache.toml  # Mount the TOML config file
    entrypoint: ["monstache", "-f", "/config/monstache.toml"]
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - mongo-network
    restart: always

  # Python Dash App
  dash-app:
    build:
      context: .
      dockerfile: Dockerfile  # Utilise un Dockerfile pour ton app Python
    command: python app.py  # Lancer ton script Dash
    volumes:
      - .:/app  # Monte ton code dans le conteneur
    ports:
      - "8050:8050"  # Port d'accès à l'application Dash
    networks:
      - mongo-network
    depends_on:
      - mongodb
      - elasticsearch
      - monstache
    restart: always

  # Python Scraping Script
  scraping-script:
    build:  
      context: .
      dockerfile: Dockerfile  # Utilise le même Dockerfile ou un autre si nécessaire
    command: python time_scraper.py  # Lancer ton script de scraping
    networks:
      - mongo-network
    depends_on:
      - mongodb
      - elasticsearch
      - monstache
    restart: always
